if path == 'list/species'
answer = server_request('/info/species')
    read client arg
    API call
    operation
    render html

 coEn la función de request lo primero que pongamos en el parentesis es la url, lo siguiente es el params...
   Como este puesto en la función

MEDIUM PART

the gene info we are using the seq id id endpoint. we only use the dictionary of practice 7. only those genes.
the start, end, length... and all that is not easy to find in the info of the endpoint:
in the descrition the first number is the number of the cromosome, the second is the start and the third is the end.
The length is the end minus the start
to get them separated, we split it by the colons


the genelist: is the phenotype species region and in order to conpute the endpoint the region is the one indicated:
the first part the number of chromosome, the start and the end. Between the three of them we use thee one which
has a 1 as the last number. This is to create the url

to search for info we need a while loop



  bases_count_dict = s.count()[5]
            percentages_bases = []
            bases = []

            for b in bases_count_dict:
                percentage = str(round((bases_count_dict[b] / s.len()) * 100, 1))

                percentages_bases.append(percentage)
                bases.append(b)
                dict_b_p = dict(zip(bases, percentages_bases))

            contents = read_html_file(path[1:] + ".html") \
                .render(context={
                "length": s.len(),
                "p_a": "A: " + dict_b_p["A"] + "%",
                "p_c": "C: " + dict_b_p["C"] + "%",
                "p_g": "G: " + dict_b_p["G"] + "%",
                "p_t": "T: " + dict_b_p["T"] + "%"
            })
